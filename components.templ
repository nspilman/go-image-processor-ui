package main

import (
	// other imports
	"strconv" // Add this line to import the strconv package
)

templ button(name string, content string, whereTo string) {
	<button hx-get={ whereTo } hx-swap="outerHTML" value={ name }>{ content }</button>
}

templ ImageForm(endpoint string, functionOptions []string, numFiles int8) {
	<form id="form" hx-encoding="multipart/form-data" hx-post={ endpoint } hx-target="#image-display">
		for i := range make([]int, numFiles) {
			<input type="file" name={ "file" + strconv.Itoa(i+1) } accept="image/jpeg"/>
		}
		<button type="submit" onClick="submitForm">
			Upload
		</button>
		<progress id="progress" value="0" max="100"></progress>
	</form>
	<select id="functionSelect" value={ endpoint }>
		for _, funcOption := range functionOptions {
			if funcOption == endpoint {
				<option funcOption selected>{ funcOption }</option>
			} else {
				<option funcOption>{ funcOption }</option>
			}
		}
	</select>
	<div id="image-display"></div>
	<script>
        htmx.on('#form', 'htmx:xhr:progress', function(evt) {
          htmx.find('#progress').setAttribute('value', evt.detail.loaded/evt.detail.total * 100)
        });
		htmx.on("#form", "htmx:xhr:loadend", function(evt) {
			evt.target.reset()
        })
		  document.getElementById('functionSelect').addEventListener('change', function() {
                    window.location.href = this.value;
                });

    </script>
}

templ Image(src string) {
	<img src={ src }/>
}

templ Page(title string) {
	<!DOCTYPE html>
	<html lang="en" class="h-full">
		<head>
			<meta charset="UTF-8"/>
			<title>{ title }</title>
			<link rel="icon" type="image/svg+xml" href="/dist/favicon.svg"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<meta name="robots" content="index, follow"/>
			<meta name="revisit-after" content="7 days"/>
			<meta name="language" content="English"/>
			<script src="https://unpkg.com/htmx.org@1.9.2" integrity="sha384-L6OqL9pRWyyFU3+/bjdSri+iIphTN/bvYyM37tICVyOJkWZLpP2vGn6VUEXgzg6h" crossorigin="anonymous"></script>
			<link rel="stylesheet" href="/output.css"/>
		</head>
		<body class="h-full bg-yellow-50 font-mono">
			<section class="max-w-lg mx-auto my-2">
				{ children... }
			</section>
		</body>
	</html>
}

templ PageWrapper(title string, component templ.Component) {
	@Page(title) {
		<div>
			@component
		</div>
	}
}
